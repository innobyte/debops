---
# .. vim: foldmarker=[[[,]]]:foldmethod=marker

# debops.grafana default variables
# ================================

# .. contents:: Sections
#    :local:
#
# .. include:: ../../../../includes/global.rst


# Grafana configuration [[[
# --------------------------------

# .. envvar:: grafana__upstream_apt_id [[[
#
# The Grafana fingerprint.
grafana__upstream_apt_id: '4E40 DDF6 D76E 284A 4A67  80E4 8C8C 34C5 2409 8CB6'

                                                                   # ]]]
# .. envvar:: grafana__upstream_apt_repository [[[
#
# The APT repository URI of the upstream Grafana repository.
grafana__upstream_apt_repository: 'deb https://packages.grafana.com/oss/deb stable main'

                                                                   # ]]]
# Installation, APT packages [[[
# ----------------

# .. envvar:: grafana__base_packages [[[
#
# List of APT packages which are required by the Grafana role.
grafana__base_packages: [ 'grafana' ]

                                                                   # ]]]
# .. envvar:: grafana__packages [[[
#
# List of APT packages to install on all hosts in Grafana inventory.
grafana__packages: [ 'software-properties-common', 'apt-transport-https' ]

                                                                   # ]]]
# .. envvar:: grafana__deploy_type [[[
#
# Select how Grafana should be installed by the role:
#
# - ``system``: install Grafana using current OS packages, possibly from the
#               backports repository.
#
# - ``upstream``: install Grafana from the upstream APT repository on
#                 Launchpad (PPA, usable on Debian as well).
#
# - ``bootstrap``: install APT packages required for Grafana and build a local
#                  ``.deb`` package using the upstream GitHub repository.
#
grafana__deploy_type: "upstream"

                                                                   # ]]]
# .. envvar:: grafana__allow [[[
#
# List of IP addresses or CIDR subnets which will be allowed to connect to the
# Grafana in :command:`ip(6)tables` and TCP wrappers. If it's empty, remote
# connections are not allowed.
grafana__allow: [ '0.0.0.0/0' ]

                                                                   # ]]]
# .. envvar:: grafana__port [[[
#
# Port number on which this Grafana listens on.
grafana__port: '3001'

                                                                   # ]]]
# Configuration for other Ansible roles [[[
# -----------------------------------------

# .. envvar:: grafana__ferm__dependent_rules [[[
#
# Configuration for :ref:`debops.ferm` Ansible role.
grafana__ferm__dependent_rules:

  - type: 'accept'
    dport: [ 'grafana' ]
    saddr: '{{ grafana__allow }}'
    accept_any: False
    weight: '40'
    role: 'grafana'

                                                                   # ]]]
# .. envvar:: grafana__etc_services__dependent_list [[[
#
# Configuration for the :ref:`debops.etc_services` Ansible role.
grafana__etc_services__dependent_list:

  - name: 'grafana'
    port: '{{ grafana__port }}'

                                                                   # ]]]
# .. envvar:: grafana__keyring__dependent_apt_keys [[[
#
# Configuration for the :ref:`debops.keyring` Ansible role.
grafana__keyring__dependent_apt_keys:

  - id: '{{ grafana__upstream_apt_id }}'
    repo: '{{ grafana__upstream_apt_repository }}'
    state: '{{ "present" if (grafana__deploy_type == "upstream") else "absent" }}'
                                                                   # ]]]
                                                                   # ]]]
# grafana__original_configuration: []
grafana__combined_configuration: '{{ grafana__default_configuration + grafana__original_configuration }}'

grafana__default_configuration:

  - name: 'server'
    options:
      - http_port: '{{ grafana__port }}'
