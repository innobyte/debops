---

- import_role:
    name: 'debops.ansible_plugins'

- name: Make sure that Ansible local fact directory exists
  file:
    path: '/etc/ansible/facts.d'
    state: 'directory'
    mode: '0755'

- name: Install required packages
  package:
    name: '{{ q("flattened", (jenkins__base_packages
                              + jenkins__packages)) }}'
    state: 'present'
  register: jenkins__register_packages
  until: jenkins__register_packages is succeeded
  notify: [ 'Restart Jenkins' ]

- name: Divert the original jenkins configuration
  dpkg_divert:
    path: '/etc/default/jenkins'
    state: 'present'
    delete: True

- name: Create custom init scripts directory.
  file:
    path: "{{ jenkins__home }}/init.groovy.d"
    state: directory
    owner: "jenkins"
    group: "jenkins"
    mode: 0775

- name: Setup jenkins password
  template:
    src: 'var/lib/jenkins/init.groovy.d/basic-security.groovy.j2'
    dest: '{{ jenkins__home }}/init.groovy.d/basic-security.groovy'
    owner: 'root'
    group: 'jenkins'
    mode: '0750'
  when: (ansible_local|d() and not (ansible_local.jenkins|d() and
    (ansible_local.jenkins.installed|d()))|bool)

- name: Restart Jenkins to set the new password
  service:
    name: 'jenkins'
    state: 'restarted'
  when: (ansible_local|d() and not (ansible_local.jenkins|d() and
    (ansible_local.jenkins.installed|d()))|bool)

- name: Ensure the script that forces the admin password is removed
  file:
    path: '{{ jenkins__home }}/init.groovy.d/basic-security.groovy'
    state: absent
  notify: [ 'Restart Jenkins' ]

- name: Generate Jenkins configuration
  template:
    src: 'etc/default/jenkins.j2'
    dest: '/etc/default/jenkins'
    owner: 'root'
    group: 'root'
    mode: '0644'
  notify: [ 'Restart Jenkins' ]

#- name: Install plugins
#  jenkins_plugin:
#    name: '{{ item.name }}'
#    state: '{{ item.state | d("present")}}'
#    url: '{{"http://localhost:" + jenkins__port }}'
#    url_username: '{{ jenkins__admin_username }}'
#    url_password: '{{ jenkins__admin_password }}'
#    with_dependencies: '{{ item.with_dependencies | d("yes") }}'
#  loop: '{{ jenkins__combined_plugins | parse_kv_items }}'

- name: Save Jenkins local facts
  template:
    src: 'etc/ansible/facts.d/jenkins.fact.j2'
    dest: '/etc/ansible/facts.d/jenkins.fact'
    owner: 'root'
    group: 'root'
    mode: '0755'
  register: jenkins__register_facts
